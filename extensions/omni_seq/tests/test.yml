$schema: "https://raw.githubusercontent.com/omnigres/omnigres/master/pg_yregress/schema.json"
instance:
  init:
  - create extension omni_seq

tests:
- name: creating a distributed ID
  query: select omni_seq.id_int64_make(100, 1)
  results:
  - id_int64_make: 100:1

- name: binary encoding
  steps:
  - query: select omni_seq.id_int16_make(100::int2, 100::int2) as encoding
    binary: results
    results:
    - encoding: 0x00640064
  - query: select omni_seq.id_int16_int32_make(100::int2, 100::int4) as encoding
    binary: results
    results:
    - encoding: 0x006400000064
  - query: select omni_seq.id_int16_int64_make(100::int2, 100) as encoding
    binary: results
    results:
    - encoding: 0x00640000000000000064
  - query: select omni_seq.id_int32_int16_make(100, 100::int2) as encoding
    binary: results
    results:
    - encoding: 0x000000640064
  - query: select omni_seq.id_int32_make(100, 100::int4) as encoding
    binary: results
    results:
    - encoding: 0x0000006400000064
  - query: select omni_seq.id_int32_int64_make(100, 100) as encoding
    binary: results
    results:
    - encoding: 0x000000640000000000000064
  - query: select omni_seq.id_int64_int16_make(100, 100::int2) as encoding
    binary: results
    results:
    - encoding: 0x00000000000000640064
  - query: select omni_seq.id_int64_int32_make(100, 100::int4) as encoding
    binary: results
    results:
    - encoding: 0x000000000000006400000064
  - query: select omni_seq.id_int64_make(100, 100) as encoding
    binary: results
    results:
    - encoding: 0x00000000000000640000000000000064

- name: binary decoding
  steps:
  - name: invalid decoding
    query: select $1::omni_seq.id_int16 as decoding
    binary: params
    params:
    - 0x00
    error: true
  - query: select $1::omni_seq.id_int16 as decoding
    binary: params
    params:
    - 0x00640064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int16_int32 as decoding
    binary: params
    params:
    - 0x006400000064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int16_int64 as decoding
    binary: params
    params:
    - 0x00640000000000000064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int32_int16 as decoding
    binary: params
    params:
    - 0x000000640064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int32 as decoding
    binary: params
    params:
    - 0x0000006400000064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int32_int64 as decoding
    binary: params
    params:
    - 0x000000640000000000000064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int64_int16 as decoding
    binary: params
    params:
    - 0x00000000000000640064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int64_int32 as decoding
    binary: params
    params:
    - 0x000000000000006400000064
    results:
    - decoding: 100:100
  - query: select $1::omni_seq.id_int64 as decoding
    binary: params
    params:
    - 0x00000000000000640000000000000064
    results:
    - decoding: 100:100

- name: system_identifier
  query: |
    select
    (omni_seq.system_identifier() = omni_seq.system_identifier() and omni_seq.system_identifier() is not null) as valid
  results:
  - valid: true

- name: smoke test
  steps:
    - query: create sequence seq
    - query: |
        create table t (
          id omni_seq.id_int64 primary key not null default
          omni_seq.id_int64_nextval(10, 'seq')
        )
    - query: |
        insert into t select from generate_series(1, 10) returning id
      results:
        - id: 10:1
        - id: 10:2
        - id: 10:3
        - id: 10:4
        - id: 10:5
        - id: 10:6
        - id: 10:7
        - id: 10:8
        - id: 10:9
        - id: 10:10